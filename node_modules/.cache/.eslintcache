[{"/Users/zerohoney/newEccProject/FrontEndTypeScript/src/index.tsx":"1","/Users/zerohoney/newEccProject/FrontEndTypeScript/src/reportWebVitals.ts":"2","/Users/zerohoney/newEccProject/FrontEndTypeScript/src/App.tsx":"3","/Users/zerohoney/newEccProject/FrontEndTypeScript/src/redux/index.ts":"4","/Users/zerohoney/newEccProject/FrontEndTypeScript/src/redux/slice/userReducer.ts":"5","/Users/zerohoney/newEccProject/FrontEndTypeScript/src/redux/slice/studentReducer.ts":"6","/Users/zerohoney/newEccProject/FrontEndTypeScript/src/Authentication/SignIn.tsx":"7","/Users/zerohoney/newEccProject/FrontEndTypeScript/src/Authentication/AuthenticationStyleComponent.ts":"8","/Users/zerohoney/newEccProject/FrontEndTypeScript/src/Resource/font/fonts.js":"9","/Users/zerohoney/newEccProject/FrontEndTypeScript/src/Authentication/SignUp.tsx":"10","/Users/zerohoney/newEccProject/FrontEndTypeScript/src/Authentication/AddProfile.tsx":"11","/Users/zerohoney/newEccProject/FrontEndTypeScript/src/Authentication/CompleteSignUp.tsx":"12","/Users/zerohoney/newEccProject/FrontEndTypeScript/src/Authentication/FindUserEmail.tsx":"13","/Users/zerohoney/newEccProject/FrontEndTypeScript/src/Authentication/FindUserPass.tsx":"14"},{"size":1006,"mtime":1665802130126,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1665493096998,"results":"17","hashOfConfig":"16"},{"size":1134,"mtime":1665888800819,"results":"18","hashOfConfig":"16"},{"size":993,"mtime":1665802130126,"results":"19","hashOfConfig":"16"},{"size":433,"mtime":1665802130126,"results":"20","hashOfConfig":"16"},{"size":418,"mtime":1665802130126,"results":"21","hashOfConfig":"16"},{"size":2923,"mtime":1665831176300,"results":"22","hashOfConfig":"16"},{"size":3376,"mtime":1665824267200,"results":"23","hashOfConfig":"16"},{"size":229,"mtime":1665802130125,"results":"24","hashOfConfig":"16"},{"size":3163,"mtime":1665886210926,"results":"25","hashOfConfig":"16"},{"size":1015,"mtime":1665820239078,"results":"26","hashOfConfig":"16"},{"size":1017,"mtime":1665823450708,"results":"27","hashOfConfig":"16"},{"size":1239,"mtime":1665824299879,"results":"28","hashOfConfig":"16"},{"size":1207,"mtime":1665825139818,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cybedo",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},"/Users/zerohoney/newEccProject/FrontEndTypeScript/src/index.tsx",[],[],"/Users/zerohoney/newEccProject/FrontEndTypeScript/src/reportWebVitals.ts",[],[],"/Users/zerohoney/newEccProject/FrontEndTypeScript/src/App.tsx",["80","81","82"],[],"/Users/zerohoney/newEccProject/FrontEndTypeScript/src/redux/index.ts",["83"],[],"import { configureStore } from \"@reduxjs/toolkit\";\nimport userReducer from \"./slice/userReducer\";\nimport studentReducer from \"./slice/studentReducer\";\n\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst teacherPersistConfig = {\n  key: \"teacher\",\n  version: 1,\n  storage,\n};\nconst studentPersistConfig = {\n  key: \"student\",\n  version: 1,\n  storage,\n};\n\nconst persistTeacherReducer = persistReducer(teacherPersistConfig, userReducer);\nconst persistStudentReducer = persistReducer(\n  studentPersistConfig,\n  studentReducer\n);\n\nexport const store = configureStore({\n  reducer: {\n    teacherUid: persistTeacherReducer,\n    studentInformation: persistStudentReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n});\n","/Users/zerohoney/newEccProject/FrontEndTypeScript/src/redux/slice/userReducer.ts",["84","85"],[],"import { combineReducers, configureStore, createSlice } from \"@reduxjs/toolkit\";\n\n// usestate 같은 역할\nexport const userReducer = createSlice({\n  name: \"teacherUid\",\n  initialState: { uid: \"고유 번호\",name:'rodtls' },\n  reducers: {\n    setTeacherUidAndName(state, uid) {\n      \n      return uid.payload;\n    },\n   \n  },\n});\n\nexport let { setTeacherUidAndName } = userReducer.actions;\n\n\n\n\n\nexport default userReducer.reducer;","/Users/zerohoney/newEccProject/FrontEndTypeScript/src/redux/slice/studentReducer.ts",[],[],"/Users/zerohoney/newEccProject/FrontEndTypeScript/src/Authentication/SignIn.tsx",["86","87","88","89"],[],"import { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { ReactComponent as EccLogo } from \"../Resource/svg/EccLogo.svg\";\nimport GlobalFont from \"../Resource/font/fonts\";\nimport {\n  SignInContainer,\n  SignInInputAreaContainer,\n  SignInInputArea,\n  AutoLogin,\n  AutoLoginCotainer,\n  LoginButton,\n} from \"./AuthenticationStyleComponent\";\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\nimport { initializeApp } from \"firebase/app\";\nconst EccText = styled.h3`\n  font-family: \"roboto\";\n  color: #3763ff;\n  opacity: 0.4;\n`;\nexport const firebaseConfig = {\n  apiKey: process.env.REACT_APP_APIKEY,\n  authDomain: process.env.REACT_APP_AUTHDOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASEURL,\n  projectId: process.env.REACT_APP_PROJECTID,\n  storageBucket: process.env.REACT_APP_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGINGSENDERID,\n  appId: process.env.REACT_APP_APPID,\n  measurementId: process.env.REACT_APP_MEASUREMENTID,\n};\nconst app = initializeApp(firebaseConfig);\n\n// 파이어베이스 권한 초기화\nconst auth = getAuth();\n\n// 파이어베이스를 활용한 회원인증(로그인)\nconst signIn = (auth: any, email: any, password: any) => {\n  signInWithEmailAndPassword(auth, email.value, password.value)\n    .then((userCredential) => {\n      console.log(userCredential);\n    })\n    .catch((error) => {\n      const errorCode = error.code;\n      alert(errorCode);\n      const errorMessage = error.message;\n    });\n};\n\nconst SignIn = () => {\n  const check = useRef<HTMLInputElement>(null);\n  const [isChecked, setIschecked] = useState<boolean>(false);\n  const email = useRef<HTMLInputElement>(null);\n  const password = useRef<HTMLInputElement>(null);\n\n  // useEffect(() => {\n  //   alert(`${isChecked === true ? \"자동로그인 적용\" : \"자동로그인 해제\"}`);\n  // }, [isChecked]);\n\n  return (\n    <SignInContainer>\n      <EccLogo style={{ margin: \"auto\" }} />\n      <GlobalFont />\n      <EccText>EXPANDED CORE CURRICULUM</EccText>\n      <SignInInputAreaContainer>\n        <SignInInputArea ref={email} placeholder=\"이메일\" type={\"email\"} />\n        <SignInInputArea\n          ref={password}\n          placeholder=\"비밀번호\"\n          type={\"password\"}\n        />\n      </SignInInputAreaContainer>\n      <AutoLoginCotainer>\n        <AutoLogin\n          ref={check}\n          type={\"checkbox\"}\n          onChange={() => {\n            setIschecked((prev) => {\n              return !prev;\n            });\n          }}\n        />\n        <label\n          style={{ position: \"absolute\", left: \"5rem\", paddingTop: \"0.4rem\" }}\n        >\n          자동 로그인\n        </label>\n      </AutoLoginCotainer>\n      <LoginButton\n        onClick={() => {\n          signIn(auth, email.current, password.current);\n        }}\n      >\n        로그인\n      </LoginButton>\n    </SignInContainer>\n  );\n};\n\nexport default SignIn;\n","/Users/zerohoney/newEccProject/FrontEndTypeScript/src/Authentication/AuthenticationStyleComponent.ts",[],[],"/Users/zerohoney/newEccProject/FrontEndTypeScript/src/Resource/font/fonts.js",[],[],"/Users/zerohoney/newEccProject/FrontEndTypeScript/src/Authentication/SignUp.tsx",["90","91","92","93","94","95"],[],"import { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { ReactComponent as EccLogo } from \"../Resource/svg/EccLogo.svg\";\nimport GlobalFont from \"../Resource/font/fonts\";\nimport {\n  SignUpContainer,\n  SignUpInputAreaContainer,\n  SignUpInputArea,\n  SignUpButton,\n} from \"./AuthenticationStyleComponent\";\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\nconst auth = getAuth();\n\nconst SignUp = () => {\n  const email = useRef<HTMLInputElement>(null);\n  const password = useRef<HTMLInputElement>(null);\n\n  interface btn {\n    width: string;\n    height: string;\n    position: string;\n    left: string;\n    border: string;\n    background: string;\n  }\n  const btnStyle = {\n    width: \"20%\",\n    height: \"2.5rem\",\n    position: \"relative\",\n    left: \"-5%\",\n    border: \"#e5e5e5\",\n    background: \"#999999\",\n    color: \"white\",\n  } as React.CSSProperties;\n\n  const EccText = styled.h3`\n    font-family: \"roboto\";\n    color: #3763ff;\n    opacity: 0.4;\n  `;\n  return (\n    <SignUpContainer>\n      <EccLogo style={{ margin: \"auto\" }} />\n      <GlobalFont />\n      <EccText>EXPANDED CORE CURRICULUM</EccText>\n      <h1>회원정보 입력</h1>\n      <SignUpInputAreaContainer>\n        <SignUpInputArea placeholder=\"이름을 입력해 주세요\" />\n        <h4>한글과 영문 대 소문자를 사용하세요. (특수기호, 공백 사용 불가)</h4>\n        <SignUpInputArea placeholder=\"생년원일 6자리를 입력해주세요 ex)001122\" />\n        <h4>한글과 영문 대 소문자를 사용하세요. (특수기호, 공백 사용 불가)</h4>{\" \"}\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            width: \"95%\",\n            margin: \"auto\",\n          }}\n        >\n          <SignUpInputArea\n            style={{ width: \"90%\" }}\n            placeholder=\"이메일을 입력해주세요\"\n            ref={email}\n          />\n          <button style={btnStyle}>중복확인</button>\n        </div>\n        <h4>한글과 영문 대 소문자를 사용하세요. (특수기호, 공백 사용 불가)</h4>\n        <SignUpInputArea\n          placeholder=\"비밀번호(영문/숫자/특수문자 조합 8~20자)\"\n          ref={password}\n        />\n        <h4>8~16자 영문 대 소문자, 숫자, 특수문자를 사용하세요.</h4>\n        <SignUpInputArea placeholder=\"비밀번호를 다시 입력해주세요\" />\n        <h4>비밀번호가 일치하지 않습니다.</h4>\n      </SignUpInputAreaContainer>\n      <SignUpButton\n        onClick={() => {\n          if (email.current !== null && password.current !== null) {\n            createUserWithEmailAndPassword(auth, email.current.value, password.current.value)\n              .then((userCredential) => {\n                const user = userCredential.user;\n              })\n              .catch((error) => {\n                const errorCode = error.code;\n                const errorMessage = error.message;\n              });\n          }\n        }}\n      >\n        회원가입\n      </SignUpButton>\n    </SignUpContainer>\n  );\n};\n\nexport default SignUp;\n","/Users/zerohoney/newEccProject/FrontEndTypeScript/src/Authentication/AddProfile.tsx",["96","97","98"],[],"import { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { ReactComponent as EccLogo } from \"../Resource/svg/EccLogo.svg\";\nimport { ReactComponent as EmptyProfile } from \"../Resource/svg/emptyProfile.svg\";\nimport GlobalFont from \"../Resource/font/fonts\";\nimport { AddProfileContainer,SkipButton } from \"./AuthenticationStyleComponent\";\nconst AddProfile = () => {\n   const EccText = styled.h3`\n    font-family: \"roboto\";\n    color: #3763ff;\n    opacity: 0.4;\n  `;\n  return (\n    <AddProfileContainer>\n      <EccLogo style={{ margin: \"auto\" }} />\n      <GlobalFont />\n      <EccText>EXPANDED CORE CURRICULUM</EccText>\n      <h1>사진등록</h1>\n      <h4 style={{ color: \"#999999\" }}>고객님의 프로필 사진을 등록해주세요</h4>\n      <EmptyProfile style={{ margin: \"auto\" }} />\n      <div style={{ 'margin': 10,'fontWeight':'bold' }}>사진변경</div>\n      <SkipButton>건너뛰기</SkipButton>\n    </AddProfileContainer>\n  );\n};\n\nexport default AddProfile;\n","/Users/zerohoney/newEccProject/FrontEndTypeScript/src/Authentication/CompleteSignUp.tsx",["99","100","101"],[],"import { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { ReactComponent as EccLogo } from \"../Resource/svg/EccLogo.svg\";\nimport { ReactComponent as Complete } from \"../Resource/svg/complete.svg\";\nimport GlobalFont from \"../Resource/font/fonts\";\nimport {\n  CompleteSignUpContainer,\n  LoginButton,\n} from \"./AuthenticationStyleComponent\";\n\nconst CompleteSignUp = () => {\n  const [userName, setUserName] = useState<string>(\"홍길동\");\n\n  const EccText = styled.h3`\n    font-family: \"roboto\";\n    color: #3763ff;\n    opacity: 0.4;\n  `;\n  return (\n    <CompleteSignUpContainer>\n      <EccLogo style={{ margin: \"auto\" }} />\n      <GlobalFont />\n      <EccText>EXPANDED CORE CURRICULUM</EccText>\n      <Complete style={{ margin: \"auto\", width: \"100\" }} />\n      <h1>회원가입이 완료되었습니다!</h1>\n      <h3>{userName}선생님! 환영합니다!</h3>\n      <LoginButton>로그인</LoginButton>\n    </CompleteSignUpContainer>\n  );\n};\n\nexport default CompleteSignUp;\n","/Users/zerohoney/newEccProject/FrontEndTypeScript/src/Authentication/FindUserEmail.tsx",["102","103","104","105","106","107"],[],"import { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { ReactComponent as EccLogo } from \"../Resource/svg/EccLogo.svg\";\nimport GlobalFont from \"../Resource/font/fonts\";\nimport {\n  SignInContainer,\n  SignInInputAreaContainer,\n  SignInInputArea,\n  AutoLogin,\n  AutoLoginCotainer,\n  LoginButton,\n} from \"./AuthenticationStyleComponent\";\nconst EccText = styled.h3`\n  font-family: \"roboto\";\n  color: #3763ff;\n  opacity: 0.4;\n`;\n\nconst FindUserEmail = () => {\n  const check = useRef<HTMLInputElement>(null);\n  const [isChecked, setIschecked] = useState<boolean>(false);\n\n  // useEffect(() => {\n  //   alert(`${isChecked === true ? \"자동로그인 적용\" : \"자동로그인 해제\"}`);\n  // }, [isChecked]);\n\n  return (\n    <SignInContainer>\n      <EccLogo style={{ margin: \"auto\" }} />\n      <GlobalFont />\n      <EccText>EXPANDED CORE CURRICULUM</EccText>\n      <h1>이메일 찾기</h1>\n      <SignInInputAreaContainer>\n        <SignInInputArea placeholder=\"이름\" />\n        <SignInInputArea placeholder=\"생년월일\" />\n      </SignInInputAreaContainer>\n      <LoginButton style={{'marginTop':30}}>이메일 찾기</LoginButton>\n    </SignInContainer>\n  );\n};\n\nexport default FindUserEmail;\n","/Users/zerohoney/newEccProject/FrontEndTypeScript/src/Authentication/FindUserPass.tsx",["108","109","110","111","112","113"],[],"import { useEffect, useRef, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { ReactComponent as EccLogo } from \"../Resource/svg/EccLogo.svg\";\nimport GlobalFont from \"../Resource/font/fonts\";\nimport {\n  SignInContainer,\n  SignInInputAreaContainer,\n  SignInInputArea,\n  AutoLogin,\n  AutoLoginCotainer,\n  LoginButton,\n} from \"./AuthenticationStyleComponent\";\nconst EccText = styled.h3`\n  font-family: \"roboto\";\n  color: #3763ff;\n  opacity: 0.4;\n`;\n\nconst FindUserPass = () => {\n  const check = useRef<HTMLInputElement>(null);\n  const [isChecked, setIschecked] = useState<boolean>(false);\n\n  // useEffect(() => {\n  //   alert(`${isChecked === true ? \"자동로그인 적용\" : \"자동로그인 해제\"}`);\n  // }, [isChecked]);\n\n  return (\n    <SignInContainer>\n      <EccLogo style={{ margin: \"auto\" }} />\n      <GlobalFont />\n      <EccText>EXPANDED CORE CURRICULUM</EccText>\n      <h1>비밀번호 찾기</h1>\n      <SignInInputAreaContainer>\n        <SignInInputArea placeholder=\"이메일\" type={'email'} />\n      </SignInInputAreaContainer>\n      <LoginButton style={{ marginTop: 30 }}>비밀번호 찾기</LoginButton>\n    </SignInContainer>\n  );\n};\n\nexport default FindUserPass;\n",{"ruleId":"114","severity":1,"message":"115","line":2,"column":8,"nodeType":"116","messageId":"117","endLine":2,"endColumn":12},{"ruleId":"114","severity":1,"message":"118","line":3,"column":10,"nodeType":"116","messageId":"117","endLine":3,"endColumn":14},{"ruleId":"114","severity":1,"message":"119","line":9,"column":10,"nodeType":"116","messageId":"117","endLine":9,"endColumn":23},{"ruleId":"114","severity":1,"message":"120","line":6,"column":3,"nodeType":"116","messageId":"117","endLine":6,"endColumn":15},{"ruleId":"114","severity":1,"message":"121","line":1,"column":10,"nodeType":"116","messageId":"117","endLine":1,"endColumn":25},{"ruleId":"114","severity":1,"message":"122","line":1,"column":27,"nodeType":"116","messageId":"117","endLine":1,"endColumn":41},{"ruleId":"114","severity":1,"message":"123","line":1,"column":10,"nodeType":"116","messageId":"117","endLine":1,"endColumn":19},{"ruleId":"114","severity":1,"message":"124","line":30,"column":7,"nodeType":"116","messageId":"117","endLine":30,"endColumn":10},{"ruleId":"114","severity":1,"message":"125","line":44,"column":13,"nodeType":"116","messageId":"117","endLine":44,"endColumn":25},{"ruleId":"114","severity":1,"message":"126","line":50,"column":10,"nodeType":"116","messageId":"117","endLine":50,"endColumn":19},{"ruleId":"114","severity":1,"message":"123","line":1,"column":10,"nodeType":"116","messageId":"117","endLine":1,"endColumn":19},{"ruleId":"114","severity":1,"message":"127","line":1,"column":29,"nodeType":"116","messageId":"117","endLine":1,"endColumn":37},{"ruleId":"114","severity":1,"message":"128","line":18,"column":13,"nodeType":"116","messageId":"117","endLine":18,"endColumn":16},{"ruleId":"114","severity":1,"message":"129","line":82,"column":23,"nodeType":"116","messageId":"117","endLine":82,"endColumn":27},{"ruleId":"114","severity":1,"message":"130","line":85,"column":23,"nodeType":"116","messageId":"117","endLine":85,"endColumn":32},{"ruleId":"114","severity":1,"message":"125","line":86,"column":23,"nodeType":"116","messageId":"117","endLine":86,"endColumn":35},{"ruleId":"114","severity":1,"message":"123","line":1,"column":10,"nodeType":"116","messageId":"117","endLine":1,"endColumn":19},{"ruleId":"114","severity":1,"message":"131","line":1,"column":21,"nodeType":"116","messageId":"117","endLine":1,"endColumn":27},{"ruleId":"114","severity":1,"message":"127","line":1,"column":29,"nodeType":"116","messageId":"117","endLine":1,"endColumn":37},{"ruleId":"114","severity":1,"message":"123","line":1,"column":10,"nodeType":"116","messageId":"117","endLine":1,"endColumn":19},{"ruleId":"114","severity":1,"message":"131","line":1,"column":21,"nodeType":"116","messageId":"117","endLine":1,"endColumn":27},{"ruleId":"114","severity":1,"message":"132","line":12,"column":20,"nodeType":"116","messageId":"117","endLine":12,"endColumn":31},{"ruleId":"114","severity":1,"message":"123","line":1,"column":10,"nodeType":"116","messageId":"117","endLine":1,"endColumn":19},{"ruleId":"114","severity":1,"message":"133","line":9,"column":3,"nodeType":"116","messageId":"117","endLine":9,"endColumn":12},{"ruleId":"114","severity":1,"message":"134","line":10,"column":3,"nodeType":"116","messageId":"117","endLine":10,"endColumn":20},{"ruleId":"114","severity":1,"message":"135","line":20,"column":9,"nodeType":"116","messageId":"117","endLine":20,"endColumn":14},{"ruleId":"114","severity":1,"message":"126","line":21,"column":10,"nodeType":"116","messageId":"117","endLine":21,"endColumn":19},{"ruleId":"114","severity":1,"message":"136","line":21,"column":21,"nodeType":"116","messageId":"117","endLine":21,"endColumn":33},{"ruleId":"114","severity":1,"message":"123","line":1,"column":10,"nodeType":"116","messageId":"117","endLine":1,"endColumn":19},{"ruleId":"114","severity":1,"message":"133","line":9,"column":3,"nodeType":"116","messageId":"117","endLine":9,"endColumn":12},{"ruleId":"114","severity":1,"message":"134","line":10,"column":3,"nodeType":"116","messageId":"117","endLine":10,"endColumn":20},{"ruleId":"114","severity":1,"message":"135","line":20,"column":9,"nodeType":"116","messageId":"117","endLine":20,"endColumn":14},{"ruleId":"114","severity":1,"message":"126","line":21,"column":10,"nodeType":"116","messageId":"117","endLine":21,"endColumn":19},{"ruleId":"114","severity":1,"message":"136","line":21,"column":21,"nodeType":"116","messageId":"117","endLine":21,"endColumn":33},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'initializeApp' is defined but never used.","'persistStore' is defined but never used.","'combineReducers' is defined but never used.","'configureStore' is defined but never used.","'useEffect' is defined but never used.","'app' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'isChecked' is assigned a value but never used.","'useState' is defined but never used.","'btn' is defined but never used.","'user' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'useRef' is defined but never used.","'setUserName' is assigned a value but never used.","'AutoLogin' is defined but never used.","'AutoLoginCotainer' is defined but never used.","'check' is assigned a value but never used.","'setIschecked' is assigned a value but never used."]